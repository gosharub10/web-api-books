// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web.DAL.Context;

#nullable disable

namespace Web.DAL.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20251029105258_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Web.DAL.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Authors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9d650ba5-7dce-4d35-aedd-ffe78a67b5f1"),
                            DateOfBirth = new DateTime(1828, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Лев Толстой"
                        },
                        new
                        {
                            Id = new Guid("075bee32-2334-4d14-8867-e348ec4fb419"),
                            DateOfBirth = new DateTime(1821, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Фёдор Достоевский"
                        });
                });

            modelBuilder.Entity("Web.DAL.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PublishYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f09236b7-f69e-4cbe-9564-8c04b4f7baff"),
                            AuthorId = new Guid("9d650ba5-7dce-4d35-aedd-ffe78a67b5f1"),
                            PublishYear = 1869,
                            Title = "Война и мир"
                        },
                        new
                        {
                            Id = new Guid("ba878172-ff3d-4577-94ae-aa032d8e6177"),
                            AuthorId = new Guid("075bee32-2334-4d14-8867-e348ec4fb419"),
                            PublishYear = 1866,
                            Title = "Преступление и наказание"
                        });
                });

            modelBuilder.Entity("Web.DAL.Models.Book", b =>
                {
                    b.HasOne("Web.DAL.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Web.DAL.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
